{"version":3,"file":"context-CzoDVYt5.js","sources":["../../umbraco.context.explorer.client/src/context.ts"],"sourcesContent":["import {UmbContextBase} from \"@umbraco-cms/backoffice/class-api\";\r\nimport {\r\n    UmbContextConsumerController, UmbContextDebugRequest, UmbContextToken,\r\n    UmbDebugContextData, UmbDebugContextItemData, contextData\r\n} from \"@umbraco-cms/backoffice/context-api\";\r\nimport {UmbControllerHost} from \"@umbraco-cms/backoffice/controller-api\";\r\nimport {filter} from \"@umbraco-cms/backoffice/external/rxjs\";\r\nimport {UmbObjectState} from \"@umbraco-cms/backoffice/observable-api\";\r\nimport {UmbControllerHostElement} from \"@umbraco-cms/backoffice/dist-cms/libs/controller-api\";\r\nimport {\r\n    UMB_CONTEXT_DEBUGGER_MODAL,\r\n    UMB_MODAL_MANAGER_CONTEXT,\r\n    UmbModalManagerContext\r\n} from \"@umbraco-cms/backoffice/modal\";\r\nimport {html, map} from \"@umbraco-cms/backoffice/external/lit\";\r\n\r\nexport const UMB_CONTEXT_EXPLORER_CONTEXT = new UmbContextToken<UmbExtensionExplorerContext>('UmbExtensionExplorerContext');\r\n\r\nexport class UmbExtensionExplorerContext extends UmbContextBase<UmbExtensionExplorerContext> {\r\n    #state = new UmbObjectState<UmbExtensionExplorerStateModel | undefined>(undefined)\r\n    readonly state = this.#state.asObservable().pipe(filter((state) => !!state));\r\n    readonly hide = this.#state.asObservablePart((state) => state?.hide);\r\n\r\n    constructor(host: UmbControllerHost) {\r\n        super(host, UMB_CONTEXT_EXPLORER_CONTEXT);\r\n        this.#state?.setValue({hide: true})\r\n    }\r\n\r\n    public toggle() {\r\n        this.#state?.setValue({hide: !this.#state?.value?.hide})\r\n    }\r\n\r\n    getHostContexts(host: UmbControllerHostElement, callback: { (data: UmbDebugContextData[]): void }) {\r\n        host.dispatchEvent(\r\n            new UmbContextDebugRequest((contexts: Map<any, any>) => {\r\n                // The Contexts are collected\r\n                // When travelling up through the DOM from this element\r\n                // to the root of <umb-app> which then uses the callback prop\r\n                // of this event that has been raised to assign the contexts\r\n                // back to this property of the WebComponent\r\n\r\n                // Massage the data into a simplier array of objects\r\n                // from a function in the context-api.\r\n                callback(contextData(contexts));\r\n            }),\r\n        );\r\n    }\r\n\r\n    public displayHostContexts(host: UmbControllerHostElement) {\r\n        this.getHostContexts(host, (contexts) => {\r\n            new UmbContextConsumerController(host, UMB_MODAL_MANAGER_CONTEXT, (instance: UmbModalManagerContext) => {\r\n                console.log(host)\r\n                instance?.open(host, UMB_CONTEXT_DEBUGGER_MODAL, {\r\n                    data: {\r\n                        content: this.#renderContextAliases(contexts)\r\n                    }\r\n                })\r\n            });\r\n        });\r\n    }\r\n\r\n    #renderContextAliases(contexts: UmbDebugContextData[]) {\r\n        return html`\r\n            <div class=\"events\">\r\n                ${map(contexts, (context) => {\r\n                    return html`\r\n                        <details>\r\n                            <summary><strong>${context.alias}</strong></summary>\r\n                            ${this.#renderContextData(context.data)}\r\n                        </details>\r\n                    `;\r\n                })}\r\n            </div>`;\r\n    }\r\n\r\n    #renderContextData(instance: UmbDebugContextItemData) {\r\n        switch (instance.type) {\r\n            case 'function': {\r\n                return html`<h3>Callable Function</h3>`;\r\n            }\r\n\r\n            case 'object': {\r\n                return html`\r\n                    <details>\r\n                        <summary>Methods</summary>\r\n                        <ul>\r\n                            ${map(instance.methods, (methodName) => html`\r\n                                <li>${methodName}</li>`)}\r\n                        </ul>\r\n                    </details>\r\n\r\n                    <details>\r\n                        <summary>Properties</summary>\r\n                        <ul>\r\n                            ${map(instance.properties, (property) => {\r\n                                switch (property.type) {\r\n                                    case 'string':\r\n                                    case 'number':\r\n                                    case 'boolean':\r\n                                    case 'object':\r\n                                        return html`\r\n                                            <li>${property.key} <em>(${property.type})</em> = ${property.value}</li>`;\r\n\r\n                                    default:\r\n                                        return html`\r\n                                            <li>${property.key} <em>(${property.type})</em></li>`;\r\n                                }\r\n                            })}\r\n                        </ul>\r\n                    </details>\r\n                `;\r\n            }\r\n\r\n            case 'primitive': {\r\n                return html`<p>Context is a primitive with value: ${instance.value}</p>`;\r\n            }\r\n\r\n            default: {\r\n                return html`<p>Unknown type: ${instance.type}</p>`;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport interface UmbExtensionExplorerStateModel {\r\n    hide: boolean\r\n}\r\n\r\nexport default UmbExtensionExplorerContext;"],"names":["UMB_CONTEXT_EXPLORER_CONTEXT","UmbContextToken","UmbExtensionExplorerContext","UmbContextBase","host","__privateAdd","_UmbExtensionExplorerContext_instances","_state","__privateSet","UmbObjectState","__privateGet","filter","state","_a","_c","_b","callback","UmbContextDebugRequest","contexts","contextData","UmbContextConsumerController","UMB_MODAL_MANAGER_CONTEXT","instance","UMB_CONTEXT_DEBUGGER_MODAL","__privateMethod","renderContextAliases_fn","html","map","context","renderContextData_fn","methodName","property"],"mappings":";;;;;;;;;;;AAgBa,MAAAA,IAA+B,IAAIC,EAA6C,6BAA6B;;AAEnH,MAAMC,UAAoCC,EAA4C;AAAA,EAKzF,YAAYC,GAAyB;;AACjC,UAAMA,GAAMJ,CAA4B;AANzC,IAAAK,EAAA,MAAAC;AACH,IAAAD,EAAA,MAAAE;AAAS,IAAAC,EAAA,MAAAD,GAAA,IAAIE,EAA2D,MAAS,IACjF,KAAS,QAAQC,EAAA,MAAKH,GAAO,aAAe,EAAA,KAAKI,EAAO,CAACC,MAAU,CAAC,CAACA,CAAK,CAAC,GAC3E,KAAS,OAAOF,EAAA,MAAKH,GAAO,iBAAiB,CAACK,MAAUA,KAAA,gBAAAA,EAAO,IAAI,IAI/DC,IAAAH,EAAA,MAAKH,OAAL,QAAAM,EAAa,SAAS,EAAC,MAAM,GAAK;AAAA,EACtC;AAAA,EAEO,SAAS;;AACP,KAAAC,IAAAJ,EAAA,MAAAH,OAAA,QAAAO,EAAQ,SAAS,EAAC,MAAM,GAACC,KAAAF,IAAAH,EAAA,MAAKH,OAAL,gBAAAM,EAAa,UAAb,QAAAE,EAAoB,MAAA;AAAA,EACtD;AAAA,EAEA,gBAAgBX,GAAgCY,GAAmD;AAC1F,IAAAZ,EAAA;AAAA,MACD,IAAIa,EAAuB,CAACC,MAA4B;AAS3C,QAAAF,EAAAG,EAAYD,CAAQ,CAAC;AAAA,MAAA,CACjC;AAAA,IAAA;AAAA,EAET;AAAA,EAEO,oBAAoBd,GAAgC;AAClD,SAAA,gBAAgBA,GAAM,CAACc,MAAa;AACrC,UAAIE,EAA6BhB,GAAMiB,GAA2B,CAACC,MAAqC;AACpG,gBAAQ,IAAIlB,CAAI,GACNkB,KAAA,QAAAA,EAAA,KAAKlB,GAAMmB,GAA4B;AAAA,UAC7C,MAAM;AAAA,YACF,SAASC,EAAA,MAAKlB,GAAAmB,GAAL,WAA2BP;AAAA,UACxC;AAAA,QAAA;AAAA,MACH,CACJ;AAAA,IAAA,CACJ;AAAA,EACL;AA+DJ;AAvGIX,IAAA,eADGD,IAAA,eA2CHmB,aAAsBP,GAAiC;AAC5C,SAAAQ;AAAA;AAAA,kBAEGC,EAAIT,GAAU,CAACU,MACNF;AAAA;AAAA,+CAEoBE,EAAQ,KAAK;AAAA,8BAC9BJ,EAAA,MAAKlB,GAAAuB,GAAL,WAAwBD,EAAQ,KAAK;AAAA;AAAA,qBAGlD,CAAC;AAAA;AAEd,GAEAC,aAAmBP,GAAmC;AAClD,UAAQA,EAAS,MAAM;AAAA,IACnB,KAAK;AACM,aAAAI;AAAA,IAGX,KAAK;AACM,aAAAA;AAAA;AAAA;AAAA;AAAA,8BAIOC,EAAIL,EAAS,SAAS,CAACQ,MAAeJ;AAAA,sCAC9BI,CAAU,OAAO,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAO1BH,EAAIL,EAAS,YAAY,CAACS,MAAa;AACrC,gBAAQA,EAAS,MAAM;AAAA,UACnB,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACM,mBAAAL;AAAA,kDACGK,EAAS,GAAG,SAASA,EAAS,IAAI,YAAYA,EAAS,KAAK;AAAA,UAE1E;AACW,mBAAAL;AAAA,kDACGK,EAAS,GAAG,SAASA,EAAS,IAAI;AAAA,QACpD;AAAA,MAAA,CACH,CAAC;AAAA;AAAA;AAAA;AAAA,IAMlB,KAAK;AACM,aAAAL,0CAA6CJ,EAAS,KAAK;AAAA,IAGtE;AACW,aAAAI,qBAAwBJ,EAAS,IAAI;AAAA,EAEpD;AACJ;"}